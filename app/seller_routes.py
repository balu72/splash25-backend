from flask import Blueprint, jsonify, request
from .auth_utils import seller_required
from .models import User

seller = Blueprint('seller', __name__, url_prefix='/api/seller')

@seller.route('/dashboard', methods=['GET'])
@seller_required
def dashboard():
    """
    Endpoint for seller dashboard data
    """
    # This is a placeholder for actual dashboard data
    # In a real application, you would fetch relevant data for the seller
    return jsonify({
        'message': 'Welcome to the Seller Dashboard',
        'business_stats': {
            'total_listings': 5,
            'active_listings': 3,
            'total_views': 1250,
            'total_bookings': 28
        },
        'recent_bookings': [
            {
                'id': 1,
                'customer_name': 'John Doe',
                'event': 'Wayanad Nature Camp',
                'date': '2025-06-15',
                'participants': 2,
                'status': 'confirmed'
            },
            {
                'id': 2,
                'customer_name': 'Jane Smith',
                'event': 'Splash25 Trekking Adventure',
                'date': '2025-07-10',
                'participants': 4,
                'status': 'pending'
            }
        ],
        'verification_status': {
            'is_verified': True,
            'pending_documents': []
        }
    }), 200

@seller.route('/listings', methods=['GET'])
@seller_required
def get_listings():
    """
    Endpoint to get seller's listings
    """
    # In a real application, you would fetch the listings from the database
    return jsonify({
        'message': 'Seller listings',
        'listings': [
            {
                'id': 1,
                'name': 'Wayanad Nature Camp',
                'description': 'Experience the rich biodiversity of Wayanad with our expert guides',
                'price': 2500,
                'duration': '2 days',
                'location': 'Muthanga Wildlife Sanctuary',
                'max_participants': 20,
                'available_dates': ['2025-06-15', '2025-06-22', '2025-06-29'],
                'status': 'active',
                'image_url': '/images/listings/nature-camp.jpg'
            },
            {
                'id': 2,
                'name': 'Splash25 Trekking Adventure',
                'description': 'Trek to the heart-shaped lake at the summit of Chembra Peak',
                'price': 1800,
                'duration': '1 day',
                'location': 'Chembra Peak',
                'max_participants': 15,
                'available_dates': ['2025-07-10', '2025-07-17', '2025-07-24'],
                'status': 'active',
                'image_url': '/images/listings/trekking-adventure.jpg'
            },
            {
                'id': 3,
                'name': 'Cultural Heritage Tour',
                'description': 'Explore the rich cultural heritage of Wayanad',
                'price': 1500,
                'duration': '1 day',
                'location': 'Various locations in Wayanad',
                'max_participants': 25,
                'available_dates': ['2025-08-05', '2025-08-12', '2025-08-19'],
                'status': 'active',
                'image_url': '/images/listings/heritage-tour.jpg'
            }
        ]
    }), 200

@seller.route('/listings', methods=['POST'])
@seller_required
def create_listing():
    """
    Endpoint to create a new listing
    """
    data = request.get_json()
    
    # Validate required fields
    required_fields = ['name', 'description', 'price', 'duration', 'location', 'max_participants', 'available_dates']
    for field in required_fields:
        if field not in data:
            return jsonify({'error': f'Missing required field: {field}'}), 400
    
    # In a real application, you would save the listing to the database
    
    return jsonify({
        'message': 'Listing created successfully',
        'listing': {
            'id': 4,  # This would be generated by the database
            'name': data['name'],
            'description': data['description'],
            'price': data['price'],
            'duration': data['duration'],
            'location': data['location'],
            'max_participants': data['max_participants'],
            'available_dates': data['available_dates'],
            'status': 'active',
            'image_url': data.get('image_url', '/images/listings/default.jpg')
        }
    }), 201

@seller.route('/profile', methods=['GET'])
@seller_required
def profile():
    """
    Endpoint to get seller profile information
    """
    # In a real application, you would fetch the user from the database
    return jsonify({
        'message': 'Seller profile information',
        'profile': {
            'business_name': 'Wayanad Adventures',
            'business_description': 'Providing authentic experiences in the heart of Wayanad',
            'contact_info': {
                'email': 'contact@wayanadadventures.com',
                'phone': '+91 9496417855',
                'address': 'Wayanad Tourism Organisation, Vasudeva Edom, Pozhuthana PO, Wayanad, Kerala, India. 673 575'
            },
            'verification': {
                'status': 'verified',
                'documents': [
                    {
                        'type': 'Business Registration',
                        'status': 'approved',
                        'uploaded_at': '2025-01-15T10:30:00Z'
                    },
                    {
                        'type': 'ID Proof',
                        'status': 'approved',
                        'uploaded_at': '2025-01-15T10:35:00Z'
                    }
                ]
            }
        }
    }), 200
